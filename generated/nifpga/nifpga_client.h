
//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// EXPERIMENTAL Client convenience wrapper for NI-FPGA.
//---------------------------------------------------------------------
#ifndef NIFPGA_GRPC_CLIENT_H
#define NIFPGA_GRPC_CLIENT_H

#include <grpcpp/grpcpp.h>

#include <nifpga.grpc.pb.h>
#include <tests/utilities/client_helpers.h>

#include <memory>
#include <vector>

namespace nifpga_grpc::experimental::client {

namespace pb = ::google::protobuf;
using StubPtr = std::unique_ptr<NiFpga::Stub>;
using namespace nidevice_grpc::experimental::client;


OpenResponse open(const StubPtr& stub, const pb::string& bitfile, const pb::string& signature, const pb::string& resource, const simple_variant<OpenAttribute, std::int32_t>& attribute);
CloseResponse close(const StubPtr& stub, const nidevice_grpc::Session& session, const simple_variant<CloseAttribute, pb::uint32>& attribute);
RunResponse run(const StubPtr& stub, const nidevice_grpc::Session& session, const simple_variant<RunAttribute, pb::uint32>& attribute);
ResetResponse reset(const StubPtr& stub, const nidevice_grpc::Session& session);
DownloadResponse download(const StubPtr& stub, const nidevice_grpc::Session& session);
ReadBoolResponse read_bool(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator);
ReadBoolStreamResponse read_bool_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator);
ReadI8Response read_i8(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator);
ReadI8StreamResponse read_i8_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator);
ReadU8Response read_u8(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator);
ReadU8StreamResponse read_u8_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator);
ReadI16Response read_i16(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator);
ReadI16StreamResponse read_i16_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator);
ReadU16Response read_u16(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator);
ReadU16StreamResponse read_u16_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator);
ReadI32Response read_i32(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator);
ReadI32StreamResponse read_i32_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator);
ReadU32Response read_u32(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator);
ReadU32StreamResponse read_u32_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator);
ReadI64Response read_i64(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator);
ReadI64StreamResponse read_i64_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator);
ReadU64Response read_u64(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator);
ReadU64StreamResponse read_u64_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator);
WriteBoolResponse write_bool(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control, const bool& value);
WriteBoolStreamResponse write_bool_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control);
WriteI8Response write_i8(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control, const pb::int32& value);
WriteI8StreamResponse write_i8_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control);
WriteU8Response write_u8(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control, const pb::uint32& value);
WriteU8StreamResponse write_u8_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control);
WriteI16Response write_i16(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control, const pb::int32& value);
WriteI16StreamResponse write_i16_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control);
WriteU16Response write_u16(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control, const pb::uint32& value);
WriteU16StreamResponse write_u16_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control);
WriteI32Response write_i32(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control, const pb::int32& value);
WriteI32StreamResponse write_i32_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control, const pb::int32& value);
WriteU32Response write_u32(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control, const pb::uint32& value);
WriteU32StreamResponse write_u32_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control);
WriteI64Response write_i64(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control, const pb::int64& value);
WriteI64StreamResponse write_i64_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control, const pb::int64& value);
WriteU64Response write_u64(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control, const pb::uint64& value);
WriteU64StreamResponse write_u64_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control, const pb::uint64& value);
ReadArrayI16Response read_array_i16(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator, const pb::uint32& size);
ReadArrayI16StreamResponse read_array_i16_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator, const pb::uint32& size);
ReadArrayU16Response read_array_u16(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator, const pb::uint32& size);
ReadArrayU16StreamResponse read_array_u16_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator, const pb::uint32& size);
ReadArrayI64Response read_array_i64(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator, const pb::uint32& size);
ReadArrayI64StreamResponse read_array_i64_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator, const pb::uint32& size);
ReadArrayU64Response read_array_u64(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator, const pb::uint32& size);
ReadArrayU64StreamResponse read_array_u64_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& indicator, const pb::uint32& size);
WriteArrayI16Response write_array_i16(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control, const std::vector<pb::int32>& array, const pb::uint32& size);
WriteArrayI16StreamResponse write_array_i16_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control, const pb::uint32& size);
WriteArrayU16Response write_array_u16(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control, const std::vector<pb::uint32>& array, const pb::uint32& size);
WriteArrayU16StreamResponse write_array_u16_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control, const pb::uint32& size);
WriteArrayI64Response write_array_i64(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control, const std::vector<pb::int64>& array, const pb::uint32& size);
WriteArrayI64StreamResponse write_array_i64_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control, const pb::uint32& size);
WriteArrayU64Response write_array_u64(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control, const std::vector<pb::uint64>& array, const pb::uint32& size);
WriteArrayU64StreamResponse write_array_u64_stream(const StubPtr& stub, const nidevice_grpc::Session& session, const pb::uint32& control, const pb::uint32& size);

} // namespace nifpga_grpc::experimental::client

#endif /* NIFPGA_GRPC_CLIENT_H */
