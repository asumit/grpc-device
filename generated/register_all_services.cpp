//---------------------------------------------------------------------
// This file is automatically generated. All manual edits will be lost.
//---------------------------------------------------------------------
// Register all services implementation.
//---------------------------------------------------------------------
#include "register_all_services.h"

#include <string>
#include <vector>

#include <server/core_service_registrar.h>
#include <server/session_repository.h>
#include <server/data_moniker_service.h>

#include "nidaqmx/nidaqmx_service_registrar.h"
#include "nidaqmx/nidaqmx_service.h"
#include "nifpga/nifpga_service_registrar.h"
#include "nifpga/nifpga_service.h"

namespace nidevice_grpc {

std::shared_ptr<void> register_all_services(
  grpc::ServerBuilder& server_builder,
  const nidevice_grpc::FeatureToggles& feature_toggles)
{
  auto service_vector = std::make_shared<std::vector<std::shared_ptr<void>>>();

  auto session_repository = std::make_shared<nidevice_grpc::SessionRepository>();
  auto core_service = nidevice_grpc::register_core_service(server_builder, session_repository);
  service_vector->insert(
    service_vector->end(), 
    {session_repository, core_service});

  auto moniker_service = std::make_shared<ni::data_monikers::DataMonikerService>();
  server_builder.RegisterService(moniker_service.get());
  service_vector->push_back(moniker_service);

  auto task_handle_repository = std::make_shared<nidevice_grpc::SessionResourceRepository<TaskHandle>>(session_repository.get());
  auto ni_fpga_session_repository = std::make_shared<nidevice_grpc::SessionResourceRepository<NiFpga_Session>>(session_repository.get());

  service_vector->push_back(
    nidaqmx_grpc::register_service(
      server_builder, 
      task_handle_repository,
      feature_toggles));
  service_vector->push_back(
    nifpga_grpc::register_service(
      server_builder, 
      ni_fpga_session_repository,
      feature_toggles));

  nidaqmx_grpc::RegisterMonikers();
  nifpga_grpc::RegisterMonikers();

  return service_vector;
}

} // nidevice_grpc
